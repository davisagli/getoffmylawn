# Generated by taking https://github.com/gothinkster/realworld/blob/master/api/swagger.json
# and feeding it into https://mermade.org.uk/openapi-converter

openapi: 3.0.0
info:
  description: getoffmylawn API
  version: 1.0.0
  title: getoffmylawn API
  contact:
    name: RealWorld
    url: https://realworld.io
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
paths:
  /users/login:
    post:
      summary: Existing user login
      description: Login for existing user
      tags:
        - User and Authentication
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
        description: Credentials to use
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /user:
    get:
      summary: Get current user
      description: Gets the currently logged-in user
      tags:
        - User and Authentication
      security:
        - Token: []
      operationId: GetCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /urls:
    post:
      summary: Create an URL
      description: Create an URL. Auth is required
      tags:
        - URLs
      security:
        - Token: []
      operationId: CreateUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUrl"
        description: URL to create
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Url"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  "/urls/{slug}":
    get:
      summary: Get an URL
      description: Get an URL. Auth not required
      tags:
        - URLs
      operationId: GetUrl
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug of the URL to get
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Url"
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    put:
      summary: Update an URL
      description: Update an URL. Auth is required
      tags:
        - URLs
      security:
        - Token: []
      operationId: UpdateUrl
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug of the URL to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUrl"
        description: URL to update
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Url"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    delete:
      summary: Delete an URL
      description: Delete an URL. Auth is required
      tags:
        - URLs
      security:
        - Token: []
      operationId: DeleteUrl
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug of the URL to delete
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
servers:
  - url: /api
components:
  securitySchemes:
    Token:
      description: >+
        For accessing the protected API resources, you must have received a a
        valid JWT token after registering or logging in. This JWT token must
        then be used for all protected resources by passing it in via the
        'Authorization' header.


        A JWT token is generated by the API by either registering via /users or logging in via /users/login.


        The following format must be in the 'Authorization' header :

            Token: xxxxxx.yyyyyyy.zzzzzz

      type: apiKey
      name: Authorization
      in: header
  schemas:
    LoginUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          # format: password  # TODO: uncomment when https://github.com/p1c2u/openapi-core/pull/132 is merged
      required:
        - username
        - password
    LoginUserRequest:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/LoginUser"
      required:
        - user
    User:
      type: object
      properties:
        token:
          type: string
        username:
          type: string
      required:
        - token
        - username
    UserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
      required:
        - user
    Url:
      type: object
      properties:
        slug:
          type: string
        title:
          type: string
        description:
          type: string
        href:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - slug
        - title
        - description
        - href
        - createdAt
        - updatedAt
    NewUrl:
      type: object
      properties:
        slug:
          type: string
        title:
          type: string
        description:
          type: string
        href:
          type: string
      required:
        - title
        - description
        - href
    UpdateUrl:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        href:
          type: string
    GenericErrorModel:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - errors
